<?xml version="1.0"?>

 <!-- This Source Code is subject to the terms of the Mozilla Public License
   - version 2.0 (the "License"). You can obtain a copy of the License at
   - http://mozilla.org/MPL/2.0/. -->

<!DOCTYPE window SYSTEM "chrome://imagetoolbar/locale/toolbar.dtd">

<bindings id="imgToolbarBindings"
  xmlns="http://www.mozilla.org/xbl"
  xmlns:xbl="http://www.mozilla.org/xbl">
 
  <binding id="imagetoolbar" bindToUntrustedContent="true">
  
    <resources>
      <stylesheet src="chrome://imagetoolbar/skin/"/>
    </resources>
    
    <xbl:implementation>
      <xbl:constructor>
      <![CDATA[
        var newEvent = document.createEvent("Event");
        newEvent.initEvent(
          "imagetoolbar-init-event" // type
        , true // bubbles
        , true // cancelable
        );
        this.dispatchEvent(newEvent);
      ]]>
      </xbl:constructor>
    </xbl:implementation>

    <xbl:content xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
      <toolbar id="imagetoolbar-toolbar"
        class="toolbar-primary chromeclass-toolbar">
        <toolbarbutton
          id="imagetoolbar_save"
          anonid="imagetoolbar_save"
          class="mozilla-image-toolbar"
          label="&imagetoolbar.save;"/>
        <toolbarbutton
          id="imagetoolbar_copy"
          anonid="imagetoolbar_copy"
          class="mozilla-image-toolbar"
          label="&imagetoolbar.copy;"/>
        <toolbarbutton 
          id="imagetoolbar_print"
          anonid="imagetoolbar_print"
          class="mozilla-image-toolbar"
          label="&imagetoolbar.print;"/>
        <toolbarbutton 
          id="imagetoolbar_info"
          anonid="imagetoolbar_info"
          class="mozilla-image-toolbar"
          label="&imagetoolbar.info;"/>
        <toolbarbutton 
          id="imagetoolbar_folder"
          anonid="imagetoolbar_folder"
          class="mozilla-image-toolbar"
          label="&imagetoolbar.folder;"/>
      </toolbar>
    </xbl:content>
    
    <handlers>
      <handler event="mouseout">
      <![CDATA[
        var newEvent = document.createEvent("MouseEvents");
        newEvent.initMouseEvent(
          "imgtoolbar_mouseout_toolbar" // type
        , true  // canBubble
        , true  // cancelable
        , document.defaultView // view
        , 1     // detail (left-click)
        , 0     // screenX
        , 0     // screenY
        , 0     // clientX
        , 0     // clientY
        , false // ctrlKey
        , false // altKey
        , false // shiftKey
        , false // metakey
        , 0     // button
        , event.relatedTarget
        );
        this.dispatchEvent(newEvent);
      ]]>
      </handler>
      <handler event="mouseover">
      <![CDATA[
        var newEvent = document.createEvent("MouseEvents");
        newEvent.initMouseEvent(
          "imgtoolbar_mouseover_toolbar" // type
        , true // canBubble
        , true // cancelable
        , document.defaultView // view
        , 1 // detail (left-click)
        , 0 // screenX
        , 0 // screenY
        , event.clientX // clientX
        , event.clientY // clientY
        , false // ctrlKey
        , false // altKey
        , false // shiftKey
        , false // metakey
        , 0     // button
        , event.relatedTarget
        );
        this.dispatchEvent(newEvent);
      ]]>
      </handler>
      <handler event="click">
      <![CDATA[
        // prevent context menu
        
        // stop right-clicks
        if (event.button == 2) {
          event.preventDefault();
        }
        
        // left-button is pressed
        if (event.button == 0) {
          event.preventDefault();
          event.stopPropagation();
        }
          
        // dispatch replacement event
        var newEvent = document.createEvent("MouseEvents");
        newEvent.initMouseEvent(
          "imgtoolbar_click" // type
        , true    // canBubble
        , true    // cancelable
        , document.defaultView // view
        , 0 // detail (left-click)
        , 0 // screenX
        , 0 // screenY
        , 0 // clientX
        , 0 // clientY
        , event.ctrlKey // ctrlKey
        , false         // altKey
        , false         // shiftKey
        , false         // metakey
        , event.button  // button
        , event.relatedTarget
        );
        event.originalTarget.dispatchEvent(newEvent);
      ]]>
      </handler>
    </handlers>
    
  </binding>
  
  <binding id="img" bindToUntrustedContent="true">
  
    <handlers>
      <handler event="mouseover">
      <![CDATA[
        var ctrlKey = event.ctrlKey;
        var newEvent = document.createEvent("MouseEvents");
        newEvent.initMouseEvent(
          "imgtoolbar_mouseover" // type
        , true // canBubble
        , true // cancelable
        , document.defaultView // view
        , 1 // detail (left-click)
        , 0 // screenX
        , 0 // screenY
        , 0 // clientX
        , 0 // clientY
        , ctrlKey // ctrlKey
        , false   // altKey
        , false   // shiftKey
        , false   // metkey
        , 0       // button
        , null    // relatedTarget
        ); 
        this.dispatchEvent(newEvent);
      ]]>
      </handler>
      <handler event="mouseout">
      <![CDATA[
        var newEvent = document.createEvent("MouseEvents");
        newEvent.initMouseEvent(
          "imgtoolbar_mouseout" // type
        , true // canBubble
        , true // cancelable
        , document.defaultView // view
        , 1 // detail (left-click)
        , 0 // screenX
        , 0 // screenY
        , 0 // clientX
        , 0 // clientY
        , false // ctrlKey
        , false // altKey
        , false // shiftKey
        , false // metkey
        , 0     // button
        , event.relatedTarget
        );
        this.dispatchEvent(newEvent);
      ]]>
      </handler>
    </handlers>

  </binding>

</bindings>